# Aqu√≠ se almacenan los usuarios registrados 
usuarios = {}

# Bucle while con condici√≥n True para que de una se muestre por pantalla el men√∫
while True:
    
    opcion = input("\n¬øQu√© quieres hacer? [1] Registrarse  [2] Iniciar sesi√≥n  [3] Salir: ")
    
    if opcion == "1":
        
        email = input("Introduce un nombre de usuario (email): ")

        # Este while comprueba todos los requisitos que debe de tener el email
        while len(email) < 3 or "@" not in email or not (email.endswith(".com") or email.endswith(".es") or email.endswith(".net")) or any(c in "!#$%&*?" for c in email):
            print("Email inv√°lido. Debe tener al menos 3 caracteres, incluir '@', y tener una extensi√≥n v√°lida como .com, .es, .net.")
            email = input("Introduce un nombre de usuario (email): ")

        password = input("Introduce una contrase√±a: ")

        # Este while comprueba todos los requisitos que debe de tener la contrase√±a
        while len(password) < 8 or not any(c.isupper() for c in password) or not any(c.isdigit() for c in password) or not any(c in "!@#$%&*?," for c in password):
            print("Contrase√±a insegura ‚ùå. Debe tener al menos 8 caracteres, una may√∫scula, un n√∫mero y un s√≠mbolo especial (!@#$%&*?, etc.).")
            password = input("Introduce una contrase√±a: ")

        
        usuarios[email] = password
        print("Usuario registrado con √©xito ‚úÖ")

    elif opcion == "2":
        # A partir de aqu√≠ es el inicio de sesi√≥n
        email = input("Introduce tu usuario (email): ")

        # If para comprobar si el usuario existe
        if email not in usuarios:
            print("Acceso denegado ‚õî. El usuario no existe.")
        else:
            intentos = 0
            while intentos < 3:
                password = input("Introduce tu contrase√±a: ")

                # If para comprobar si la contrase√±a es la del usuario
                if usuarios[email] == password:
                    print(f"Acceso concedido ‚úÖ. Bienvenida, {email}.")
                    break
                else:
                    intentos += 1
                    print(f"Acceso denegado ‚õî. Intento {intentos}/3")

            if intentos == 3:
                print("Demasiados intentos fallidos üö´. Regresando al men√∫ principal.")

    elif opcion == "3":
        print("¬°Hasta luego!")
        break

    else:
        print("Opci√≥n no v√°lida. Intenta de nuevo.")



# Esto no forma parte de la pr√°ctica, pero quiero reservarlo por si acaso
""" Funci√≥n para validar el email 
def validar_email(email):
    # Validaci√≥n de la estructura del email 
    if len(email) < 3 or "@" not in email:
        print("Email inv√°lido. Debe tener al menos 3 caracteres, incluir '@', y tener una extensi√≥n v√°lida como .com, .es, .net.")
        return
    if not (email.endswith(".com") or email.endswith(".es") or email.endswith(".net")):
        print("Email inv√°lido. Debe tener una extensi√≥n v√°lida como .com, .es, .net.")
        return
    if any(c in "!#$%&*?" for c in email):  # Verificamos si contiene s√≠mbolos no permitidos
        print("Email inv√°lido. No debe contener s√≠mbolos especiales como (!@#$%&*?, etc.).")
        return
    return email

# Funci√≥n para validar la contrase√±a 
def validar_contrasena(password):
    if len(password) < 8:
        print("Contrase√±a insegura ‚ùå. Debe tener al menos 8 caracteres.")
        return
    if not any(c.isupper() for c in password):
        print("Contrase√±a insegura ‚ùå. Debe tener al menos una may√∫scula.")
        return
    if not any(c.isdigit() for c in password):
        print("Contrase√±a insegura ‚ùå. Debe tener al menos un n√∫mero.")
        return
    if not any(c in "!@#$%&*?," for c in password):
        print("Contrase√±a insegura ‚ùå. Debe tener al menos un s√≠mbolo especial (!@#$%&*?, etc.).")
        return
    return password

# Funci√≥n para registrar un nuevo usuario 
def registrar_usuario():
    email = input("Introduce un nombre de usuario (email): ")
    
    # Validaci√≥n del email 
    while not validar_email(email):
        email = input("Introduce un nombre de usuario (email): ")
    
    password = input("Introduce una contrase√±a: ")
    
    # Validaci√≥n de la contrase√±a 
    while not validar_contrasena(password):
        password = input("Introduce una contrase√±a: ")
    
    # Guardamos el usuario en el diccionario de usuarios 
    usuarios[email] = password
    print("Usuario registrado con √©xito ‚úÖ")

# Funci√≥n para iniciar sesi√≥n 
def iniciar_sesion():
    email = input("Introduce tu usuario (email): ")
    
    # Verificaci√≥n de si el usuario existe 
    if email not in usuarios:
        print("Acceso denegado ‚õî. El usuario no existe.")
        return
    
    # Intentos de login 
    intentos = 0
    while intentos < 3:
        password = input("Introduce tu contrase√±a: ")
        
        if usuarios[email] == password:
            print(f"Acceso concedido ‚úÖ. Bienvenida, {email}.")
            return
        else:
            intentos += 1
            print(f"Acceso denegado ‚õî. Intento {intentos}/3")
    
    print("Demasiados intentos fallidos üö´. Regresando al men√∫ principal.")

# Funci√≥n que ejecuta el men√∫ 
def menu():
    while True:
        opcion = input("\n¬øQu√© quieres hacer? [1] Registrarse  [2] Iniciar sesi√≥n  [3] Salir: ")
        
        if opcion == "1":
            registrar_usuario()
        elif opcion == "2":
            iniciar_sesion()
        elif opcion == "3":
            print("¬°Hasta luego!")
            break
        else:
            print("Opci√≥n no v√°lida. Intenta de nuevo.")

# Diccionario para almacenar los usuarios registrados 
usuarios = {}

# Llamada al men√∫ principal 
menu()
"""

